---
title: Monitoring and KPIs for On-Demand MySQL for Pivotal Platform
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic explains how to monitor the health of the <%= vars.product_full %> service
using the logs, metrics, and Key Performance Indicators
(KPIs) generated by <%= vars.product_short %> component VMs.

For general information about logging and metrics in <%= vars.platform_name %>, see
[Overview of Logging and Metrics](https://docs.pivotal.io/platform/application-service/loggregator/data-sources.html).

## <a id="metrics"></a>About Metrics

Metrics are regularly-generated log messages that report measured component states.
The default metrics polling interval is 30 seconds for MySQL instances and 60 seconds for the service broker.

You can configure the interval for MySQL instance in the **Configure Monitoring** pane
in the <%= vars.product_short %> tile. For more information, see [Configure Monitoring](./install-config.html#monitoring).

Metrics are long, single lines of text that follow the format:

```
origin:"p.mysql" eventType:ValueMetric timestamp:1496776477930669688 deployment:"service-instance_2b5a001f-2bf3-460c-aee6-fd2253f9fb0c" job:"mysql" index:"b09df494-b731-4d06-a4b0-c2985ceedf4c" ip:"10.0.8.4" valueMetric:<name:"/p.mysql/performance/open_files" value:24 unit:"file" >
```

## <a id="access"></a>Access MySQL Metrics

To access MySQL metrics do either of the following:

+ [Use the Indicator Protocol Dashboard](#indicator)
+ [Use Log Cache](#log-cache)

###  <a id="indicator"></a>Use the Indicator Protocol Dashboard

You can use the Indicator Protocol dashboard to view <%= vars.product_short %> Key Performance Indicators (KPIs).

For more information about the Indicator Protocol dashboard, see [Indicator Protocol Dashboard (Beta)](https://docs.pivotal.io/platform/healthwatch/indicator-protocol.html).
For information about <%= vars.product_short %> KPIs, see [KPIs for MySQL Service Instances](#kpi) below.

The following image shows an example of the Indicator Protocol dashboard for a <%= vars.product_short %> service instance:

![This image shows KPIs metrics for MySQL server availability, the percentage of available connections, CPU utilization percentage, queries delta, ephemeral disk percentage, and persistent disk used percent. The value of the metrics are shown over time.  ](indicator-dash.png)

<a href="./images/indicator-dash.png" target="_blank">View a larger version of this image</a>

<!-- The below partial is in https://github.com/pivotal-cf/docs-partials -->

### <a id="log-cache"></a>Use Log Cache
<%= partial vars.path_to_partials + '/services/log-cache-cli-plugin',
:locals => {:service_name => vars.service_name, :platform_name => vars.platform_name} %>



## <a id="kpi"></a>KPIs for MySQL Service Instances

Key Performance Indicators (KPIs) for <%= vars.product_short %> are metrics that developers
find most useful for monitoring their MySQL service instances to ensure smooth operation.
KPIs are high-signal-value metrics that can indicate emerging issues. KPIs can be
raw component metrics or _derived_ metrics generated by applying formulas to raw metrics.

Pivotal provides the following KPIs as general alerting and response guidance
for typical <%= vars.product_short %> installations.
Pivotal recommends that you continue to fine-tune the alert measures
by observing historical trends.
Pivotal also recommends that you expand beyond this guidance and create
new, installation-specific monitoring
metrics, thresholds, and alerts based on learning from your installations.

For a list of all the <%= vars.product_short %> component metrics, see [Component Metrics](#component-metrics).

<%# If you are confused about how to edit the following HA partials see the Tile Dev partials topic in the wiki  %>

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/all-kpis' %>

## <a id="component-metrics"></a>Component Metrics

In addition to the above KPIs, the MySQL service emits the followings metrics
that can be used for monitoring and alerting:

  + [MySQL Metrics](#mysql-metrics)
  + [Disk Metrics](#disk-metrics)
  + [Leader-Follower Metrics](#l-f-metrics)
  + [Highly Available Cluster Metrics](#ha-metrics)

### <a id="mysql-metrics"></a>MySQL Metrics

All <%= vars.product_short %> service instances emit the following metrics:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/mysql-metrics' %>

### <a id="disk-metrics"></a>Disk Metrics

All <%= vars.product_short %> services emit the following disk usage metrics:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/disk-metrics' %>

### <a id="l-f-metrics"></a>Leader-Follower Metrics

Leader-follower VMs emit the followings metrics:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/l-f-metrics' %>

### <a id="ha-metrics"></a>Highly Available Cluster Metrics

HA clusters emit the followings metrics:

<%= partial vars.path_to_partials + '/mysql/monitoring/kpis-metrics/ha-metrics' %>
